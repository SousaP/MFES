class Player
types

values
-- TODO Define values here
instance variables
public name : seq of char;
private myAttempts : nat1 := 1;
private points : nat := 0;
operations

public Player : seq of char ==> Player
			Player(n) == (name := n; return self); 


public addAttempts : () ==> ()
			addAttempts () == myAttempts := myAttempts +1;
			
public addPoints : nat ==> ()
			addPoints (inc) == points := points +inc;
			
public getPoints : () ==> nat
				getPoints () == return points;

public getAttempts : () ==> nat1
				getAttempts () == return myAttempts;				
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Player